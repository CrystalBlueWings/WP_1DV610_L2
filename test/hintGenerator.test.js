import HintGenerator from '../src/hintGenerator.js'

describe('HintGenerator', () => {
  let hintGen // Variable to hold the instance of HintGenerator for testing.

  beforeEach(() => {
    // Initialize a sample Sudoku grid for testing (generated by ChatGPT).
    const grid = [
      [5, 3, null, null, 7, null, null, null, null],
      [6, null, null, 1, 9, 5, null, null, null],
      [null, 9, 8, null, null, null, null, 6, null],
      [8, null, null, null, 6, null, null, null, 3],
      [4, null, null, 8, null, 3, null, null, 1],
      [7, null, null, null, 2, null, null, null, 6],
      [null, 6, null, null, null, null, 2, 8, null],
      [null, null, null, 4, 1, 9, null, null, 5],
      [null, null, null, null, 8, null, null, 7, 9]
    ]

    hintGen = new HintGenerator(grid) // Create an instance of HintGenerator with the grid.
  })

  test('should return a valid hint for a specific cell', () => {
    const hint = hintGen.getHintForCell(0, 2) // Get hint for cell (0, 2).
    expect(hint).toBe(1) // Verify that the correct hint is returned for that cell.
  })

  test('should return null for a non-empty cell', () => {
    const hint = hintGen.getHintForCell(0, 0) // Try to get a hint for a filled cell.
    expect(hint).toBeNull() // Since the cell is not empty, it should return null.
  })

  test('should return the easiest hint to fill', () => {
    const easyHint = hintGen.getAutomatedEasyHint() // Get the easiest hint in the grid.
    expect(easyHint).toEqual({ row: 4, col: 4, hint: 5 }) // Check if it returns the correct coordinates and hint number.
  })

  test('should return null when no hints are available', () => {
    const filledGrid = [
      [5, 3, 4, 6, 7, 8, 9, 1, 2],
      [6, 7, 2, 1, 9, 5, 3, 4, 8],
      [1, 9, 8, 3, 4, 2, 5, 6, 7],
      [8, 5, 9, 7, 6, 1, 4, 2, 3],
      [4, 2, 6, 8, 5, 3, 7, 9, 1],
      [7, 1, 3, 9, 2, 4, 8, 5, 6],
      [9, 6, 1, 5, 3, 7, 2, 8, 4],
      [2, 8, 7, 4, 1, 9, 6, 3, 5],
      [3, 4, 5, 2, 8, 6, 1, 7, 9]
    ]

    const hintGenFilled = new HintGenerator(filledGrid) // Create a new instance with a filled grid.
    const hint = hintGenFilled.getAutomatedEasyHint() // Attempt to get a hint.
    expect(hint).toBeNull() // Since the grid is full, no hint should be available.
  })
})
